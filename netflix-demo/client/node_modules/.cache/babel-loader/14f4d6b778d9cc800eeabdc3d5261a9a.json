{"ast":null,"code":"import _defineProperty from \"/home/phson/Fullstackopen-examples/part2/app-example/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/phson/Fullstackopen-examples/part2/app-example/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/phson/Fullstackopen-examples/part2/app-example/src/components/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport Note from './Note';\nimport axios from 'axios';\n\nconst App = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        notes = _useState2[0],\n        setNotes = _useState2[1];\n\n  const _useState3 = useState('a new note...'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newNote = _useState4[0],\n        setNewNote = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showAll = _useState6[0],\n        setShowAll = _useState6[1];\n\n  const efHook = () => {\n    axios.get('http://localhost:3001/notes').then(response => {\n      setNotes(response.data);\n    });\n  };\n\n  useEffect(efHook, []);\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n\n  const toggleImportance = id => {\n    const url = 'http://localhost:3001/notes/' + id;\n    const note = notes.find(n => n.id === id);\n\n    const changedNote = _objectSpread({}, note, {\n      important: !note.important\n    });\n\n    axios.put(url, changedNote).then(response => {\n      setNotes(notes.map(note => note.id !== id ? note : response.data));\n    });\n  };\n\n  const rows = () => notesToShow.map(note => React.createElement(Note, {\n    key: note.id,\n    note: note,\n    toggleImportance: () => toggleImportance(note.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1\n    };\n    axios.post(\"http://localhost:3001/notes\", noteObject).then(response => {\n      setNotes(notes.concat(response.data));\n      setNewNote('');\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => setShowAll(!showAll),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"show \", showAll ? 'important' : 'all')), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, rows()), React.createElement(\"form\", {\n    onSubmit: addNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: newNote,\n    onChange: handleNoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"save\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/phson/Fullstackopen-examples/part2/app-example/src/components/App.js"],"names":["React","useState","useEffect","Note","axios","App","props","notes","setNotes","newNote","setNewNote","showAll","setShowAll","efHook","get","then","response","data","notesToShow","filter","note","important","handleNoteChange","event","target","value","toggleImportance","id","url","find","n","changedNote","put","map","rows","addNote","preventDefault","noteObject","content","date","Date","toISOString","Math","random","length","post","concat"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA,oBACKL,QAAQ,CAAC,EAAD,CADb;AAAA;AAAA,QACdM,KADc;AAAA,QACPC,QADO;;AAAA,qBAESP,QAAQ,CACpC,eADoC,CAFjB;AAAA;AAAA,QAEdQ,OAFc;AAAA,QAELC,UAFK;;AAAA,qBAKST,QAAQ,CAAC,IAAD,CALjB;AAAA;AAAA,QAKdU,OALc;AAAA,QAKLC,UALK;;AAOrB,QAAMC,MAAM,GAAG,MAAM;AACnBT,IAAAA,KAAK,CAACU,GAAN,CAAU,6BAAV,EAAyCC,IAAzC,CACEC,QAAQ,IAAI;AACVR,MAAAA,QAAQ,CAACQ,QAAQ,CAACC,IAAV,CAAR;AACD,KAHH;AAKD,GAND;;AAQAf,EAAAA,SAAS,CAACW,MAAD,EAAS,EAAT,CAAT;AAEA,QAAMK,WAAW,GAAGP,OAAO,GACvBJ,KADuB,GAEvBA,KAAK,CAACY,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,SAA1B,CAFJ;;AAIA,QAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClCb,IAAAA,UAAU,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAGC,EAAE,IAAI;AAC7B,UAAMC,GAAG,GAAG,iCAAiCD,EAA7C;AACA,UAAMP,IAAI,GAAGb,KAAK,CAACsB,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASA,EAAzB,CAAb;;AACA,UAAMI,WAAW,qBAAOX,IAAP;AAAaC,MAAAA,SAAS,EAAE,CAACD,IAAI,CAACC;AAA9B,MAAjB;;AAEAjB,IAAAA,KAAK,CAAC4B,GAAN,CAAUJ,GAAV,EAAeG,WAAf,EAA4BhB,IAA5B,CAAiCC,QAAQ,IAAI;AAC3CR,MAAAA,QAAQ,CAACD,KAAK,CAAC0B,GAAN,CAAUb,IAAI,IAAIA,IAAI,CAACO,EAAL,KAAYA,EAAZ,GAAiBP,IAAjB,GAAwBJ,QAAQ,CAACC,IAAnD,CAAD,CAAR;AACD,KAFD;AAGD,GARD;;AAUA,QAAMiB,IAAI,GAAG,MAAMhB,WAAW,CAACe,GAAZ,CAAgBb,IAAI,IACrC,oBACA,IADA;AACK,IAAA,GAAG,EAAEA,IAAI,CAACO,EADf;AAEA,IAAA,IAAI,EAAEP,IAFN;AAGA,IAAA,gBAAgB,EAAE,MAAMM,gBAAgB,CAACN,IAAI,CAACO,EAAN,CAHxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADiB,CAAnB;;AAOA,QAAMQ,OAAO,GAAIZ,KAAD,IAAW;AACzBA,IAAAA,KAAK,CAACa,cAAN;AACA,UAAMC,UAAU,GAAG;AACjBC,MAAAA,OAAO,EAAE7B,OADQ;AAEjB8B,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAFW;AAGjBpB,MAAAA,SAAS,EAAEqB,IAAI,CAACC,MAAL,KAAgB,GAHV;AAIjBhB,MAAAA,EAAE,EAAEpB,KAAK,CAACqC,MAAN,GAAe;AAJF,KAAnB;AAOAxC,IAAAA,KAAK,CACFyC,IADH,CACQ,6BADR,EACuCR,UADvC,EAEGtB,IAFH,CAEQC,QAAQ,IAAI;AAChBR,MAAAA,QAAQ,CAACD,KAAK,CAACuC,MAAN,CAAa9B,QAAQ,CAACC,IAAtB,CAAD,CAAR;AACAP,MAAAA,UAAU,CAAC,EAAD,CAAV;AACD,KALH;AAMD,GAfD;;AAgBA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAE,MAAME,UAAU,CAAC,CAACD,OAAF,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACQA,OAAO,GAAG,WAAH,GAAiB,KADhC,CADF,CAFF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGuB,IAAI,EADP,CAPF,EAUE;AAAM,IAAA,QAAQ,EAAEC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACA,IAAA,KAAK,EAAE1B,OADP;AAEA,IAAA,QAAQ,EAAEa,gBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAIE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CAVF,CADF;AAmBD,CA7ED;;AA+EA,eAAejB,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Note from './Note'\nimport axios from 'axios'\n\nconst App = (props) => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState(\n    'a new note...'\n  )\n  const [showAll, setShowAll] = useState(true)\n\n  const efHook = () => {\n    axios.get('http://localhost:3001/notes').then(\n      response => {\n        setNotes(response.data)\n      }\n    )\n  }\n\n  useEffect(efHook, [])\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const toggleImportance = id => {\n    const url = 'http://localhost:3001/notes/' + id\n    const note = notes.find(n => n.id === id)\n    const changedNote = {...note, important: !note.important}\n\n    axios.put(url, changedNote).then(response => {\n      setNotes(notes.map(note => note.id !== id ? note : response.data))\n    })\n  }\n\n  const rows = () => notesToShow.map(note =>\n    <\n    Note key={note.id}\n    note={note}\n    toggleImportance={() => toggleImportance(note.id)}\n    />\n  )\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1,\n    }\n\n    axios\n      .post(\"http://localhost:3001/notes\", noteObject)\n      .then(response => {\n        setNotes(notes.concat(response.data))\n        setNewNote('')\n      })\n  }\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n        value={newNote}\n        onChange={handleNoteChange}/>\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}