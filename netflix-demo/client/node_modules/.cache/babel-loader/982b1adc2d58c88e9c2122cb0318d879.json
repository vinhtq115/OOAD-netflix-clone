{"ast":null,"code":"import _slicedToArray from \"/home/phson/Fullstackopen-examples/part2/app-example/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/phson/Fullstackopen-examples/part2/app-example/src/components/App.js\";\nimport React, { useState } from 'react';\nimport Note from './Note';\n\nconst App = props => {\n  const _useState = useState(props.notes),\n        _useState2 = _slicedToArray(_useState, 2),\n        notes = _useState2[0],\n        setNotes = _useState2[1];\n\n  const _useState3 = useState('a new note...'),\n        _useState4 = _slicedToArray(_useState3, 2),\n        newNote = _useState4[0],\n        setNewNote = _useState4[1];\n\n  const _useState5 = useState(true),\n        _useState6 = _slicedToArray(_useState5, 2),\n        showAll = _useState6[0],\n        setShowAll = _useState6[1];\n\n  const notesToShow = setShowAll ? notes : notes.filter(note => note.important === true);\n\n  const handleNoteChange = event => {\n    console.log(event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const rows = () => notesToShow.map(note => React.createElement(Note, {\n    key: note.id,\n    note: note,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }));\n\n  const addNote = event => {\n    event.preventDefault();\n    console.log('button clicked', event.target);\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1\n    };\n    setNotes(notes.concat(noteObject));\n    setNewNote('');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, rows()), React.createElement(\"form\", {\n    onSubmit: addNote,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    value: newNote,\n    onChange: handleNoteChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"save\")));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/phson/Fullstackopen-examples/part2/app-example/src/components/App.js"],"names":["React","useState","Note","App","props","notes","setNotes","newNote","setNewNote","showAll","setShowAll","notesToShow","filter","note","important","handleNoteChange","event","console","log","target","value","rows","map","id","addNote","preventDefault","noteObject","content","date","Date","toISOString","Math","random","length","concat"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AAAA,oBACKH,QAAQ,CAACG,KAAK,CAACC,KAAP,CADb;AAAA;AAAA,QACdA,KADc;AAAA,QACPC,QADO;;AAAA,qBAESL,QAAQ,CACpC,eADoC,CAFjB;AAAA;AAAA,QAEdM,OAFc;AAAA,QAELC,UAFK;;AAAA,qBAKSP,QAAQ,CAAC,IAAD,CALjB;AAAA;AAAA,QAKdQ,OALc;AAAA,QAKLC,UALK;;AAMrB,QAAMC,WAAW,GAAGD,UAAU,GAC1BL,KAD0B,GAE1BA,KAAK,CAACO,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmB,IAAxC,CAFJ;;AAIA,QAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACAZ,IAAAA,UAAU,CAACQ,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAV;AACD,GAHD;;AAKA,QAAMC,IAAI,GAAG,MAAMV,WAAW,CAACW,GAAZ,CAAgBT,IAAI,IACrC,oBACA,IADA;AACK,IAAA,GAAG,EAAEA,IAAI,CAACU,EADf;AAEA,IAAA,IAAI,EAAEV,IAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADiB,CAAnB;;AAMA,QAAMW,OAAO,GAAIR,KAAD,IAAW;AACzBA,IAAAA,KAAK,CAACS,cAAN;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAAK,CAACG,MAApC;AACA,UAAMO,UAAU,GAAG;AACjBC,MAAAA,OAAO,EAAEpB,OADQ;AAEjBqB,MAAAA,IAAI,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAFW;AAGjBhB,MAAAA,SAAS,EAAEiB,IAAI,CAACC,MAAL,KAAgB,GAHV;AAIjBT,MAAAA,EAAE,EAAElB,KAAK,CAAC4B,MAAN,GAAe;AAJF,KAAnB;AAMA3B,IAAAA,QAAQ,CAACD,KAAK,CAAC6B,MAAN,CAAaR,UAAb,CAAD,CAAR;AACAlB,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAXD;;AAYA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGa,IAAI,EADP,CAFF,EAKE;AAAM,IAAA,QAAQ,EAAEG,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACA,IAAA,KAAK,EAAEjB,OADP;AAEA,IAAA,QAAQ,EAAEQ,gBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAIE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CALF,CADF;AAcD,CA/CD;;AAiDA,eAAeZ,GAAf","sourcesContent":["import React, {useState} from 'react'\nimport Note from './Note'\n\nconst App = (props) => {\n  const [notes, setNotes] = useState(props.notes)\n  const [newNote, setNewNote] = useState(\n    'a new note...'\n  )\n  const [showAll, setShowAll] = useState(true)\n  const notesToShow = setShowAll\n    ? notes\n    : notes.filter(note => note.important === true)\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const rows = () => notesToShow.map(note =>\n    <\n    Note key={note.id}\n    note={note}\n    />\n  )\n  const addNote = (event) => {\n    event.preventDefault()\n    console.log('button clicked', event.target)\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1,\n    }\n    setNotes(notes.concat(noteObject))\n    setNewNote('')\n  }\n  return (\n    <div>\n      <h1>Notes</h1>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n        value={newNote}\n        onChange={handleNoteChange}/>\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}