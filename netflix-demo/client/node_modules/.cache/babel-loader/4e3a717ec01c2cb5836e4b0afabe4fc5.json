{"ast":null,"code":"import axios from 'axios';\nconst baseURL = 'http://localhost:3001/notes';\n\nconst getAll = () => {\n  const request = axios.get(baseURL);\n  const nonExisting = {\n    id: 1000,\n    content: 'A fictional note',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true\n  };\n  return request.then(response => response.data.concat(nonExisting));\n};\n\nconst create = newObject => {\n  const request = axios.post(baseURL, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(\"\".concat(baseURL, \"/\").concat(id), newObject);\n  return request.then(response => response.data);\n};\n\nexport default {\n  getAll: getAll,\n  create: create,\n  update: update\n};","map":{"version":3,"sources":["/home/phson/Fullstackopen-examples/part2/app-example/src/services/notes.js"],"names":["axios","baseURL","getAll","request","get","nonExisting","id","content","date","important","then","response","data","concat","create","newObject","post","update","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,6BAAhB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACnB,QAAMC,OAAO,GAAGH,KAAK,CAACI,GAAN,CAAUH,OAAV,CAAhB;AACA,QAAMI,WAAW,GAAG;AAClBC,IAAAA,EAAE,EAAE,IADc;AAElBC,IAAAA,OAAO,EAAE,kBAFS;AAGlBC,IAAAA,IAAI,EAAE,0BAHY;AAIlBC,IAAAA,SAAS,EAAE;AAJO,GAApB;AAMA,SAAON,OAAO,CAACO,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,CAAcC,MAAd,CAAqBR,WAArB,CAAzB,CAAP;AACD,CATD;;AAWA,MAAMS,MAAM,GAAGC,SAAS,IAAI;AAC1B,QAAMZ,OAAO,GAAGH,KAAK,CAACgB,IAAN,CAAWf,OAAX,EAAoBc,SAApB,CAAhB;AACA,SAAOZ,OAAO,CAACO,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACD,CAHD;;AAKA,MAAMK,MAAM,GAAG,CAACX,EAAD,EAAKS,SAAL,KAAmB;AAChC,QAAMZ,OAAO,GAAGH,KAAK,CAACkB,GAAN,WAAajB,OAAb,cAAwBK,EAAxB,GAA8BS,SAA9B,CAAhB;AACA,SAAOZ,OAAO,CAACO,IAAR,CAAaC,QAAQ,IAAIA,QAAQ,CAACC,IAAlC,CAAP;AACD,CAHD;;AAKA,eAAe;AACbV,EAAAA,MAAM,EAAEA,MADK;AAEbY,EAAAA,MAAM,EAAEA,MAFK;AAGbG,EAAAA,MAAM,EAAEA;AAHK,CAAf","sourcesContent":["import axios from 'axios'\n\nconst baseURL = 'http://localhost:3001/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseURL)\n  const nonExisting = {\n    id: 1000,\n    content: 'A fictional note',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseURL, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseURL}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default {\n  getAll: getAll,\n  create: create,\n  update: update\n}\n"]},"metadata":{},"sourceType":"module"}